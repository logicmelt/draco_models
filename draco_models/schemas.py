import datetime
from typing import Annotated
from pydantic import Field, StringConstraints, BaseModel


class DetectorLoc(BaseModel):
    """The location of the detector."""

    latitude: float = Field(..., description="The latitude of the detector.")
    longitude: float = Field(..., description="The longitude of the detector.")


class ResultsIcos(BaseModel):
    """Results of the icos simulation."""

    start_time: datetime.datetime = Field(
        ..., description="Start time covered by the results."
    )
    end_time: datetime.datetime = Field(
        ..., description="End time covered by the results."
    )
    detector_location: DetectorLoc = Field(
        ..., description="The location of the detector."
    )
    detector_type: Annotated[str, StringConstraints(to_lower=True)] = Field(
        ..., description="Type of the detector, virtual or real."
    )
    mean_zenith: float = Field(
        ...,
        description="Mean zenith angle of the particles detected within the time interval.",
    )
    variance_zenith: float = Field(
        ...,
        description="Variance of the zenith angle of the particles detected within the time interval.",
    )
    skewness_zenith: float = Field(
        ...,
        description="Skewness of the zenith angle of the particles detected within the time interval.",
    )
    kurtosis_zenith: float = Field(
        ...,
        description="Kurtosis of the zenith angle of the particles detected within the time interval.",
    )
    mean_azimuth: float = Field(
        ...,
        description="Mean azimuth angle of the particles detected within the time interval.",
    )
    variance_azimuth: float = Field(
        ...,
        description="Variance of the azimuth angle of the particles detected within the time interval.",
    )
    skewness_azimuth: float = Field(
        ...,
        description="Skewness of the azimuth angle of the particles detected within the time interval.",
    )
    kurtosis_azimuth: float = Field(
        ...,
        description="Kurtosis of the azimuth angle of the particles detected within the time interval.",
    )
    multiplicity: float = Field(
        ...,
        description="Average of the number of particles that reached the detector and were generated by the same primary.",
    )
    relative_time: float = Field(
        ...,
        description="Average of the time it took the particle to reach the detector since the start of the EVENT.",
    )
    temperature: list[float] = Field(
        ...,
        description="List of temperatures at the detector location during the time interval.",
    )
    density: list[float] = Field(
        ...,
        description="List of densities at the detector location during the time interval.",
    )
    altitude: list[float] = Field(
        ...,
        description="List of altitudes where the temperatures and densities were measured.",
    )
    n_readings: int = Field(..., description="Number of readings in the time interval.")
